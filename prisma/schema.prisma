// schema.prisma

generator client {
  provider = "prisma-client-js"
}

generator custom_generator {
    provider = "prisma-generator-fake-data"
    output   = "../seed/customer.tsx"
}

datasource db {
  provider = "postgresql"
  url = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}



model Customer {
  id            String       @default(cuid()) @id
  name          String
  email         String   @unique
  createdAt     DateTime  @default(now()) @map(name: "created_at")
  updatedAt     DateTime  @updatedAt @map(name: "updated_at")
  @@map(name: "customers")
  Invoice Invoice[]
}

// Create invoice schema and link it with customer
model Invoice {
  id            String       @default(cuid()) @id
  amount        Float
  customer      Customer     @relation(fields: [customerId], references: [id])
  customerId    String
  createdAt     DateTime  @default(now()) @map(name: "created_at")
  updatedAt     DateTime  @updatedAt @map(name: "updated_at")
  dueDate       DateTime?  @map(name: "due_date")
  status        String    @default("PENDING")
  @@map(name: "invoices")
}

model AuditLog {
  id          String    @default(cuid()) @id
  tableName   String
  operation   String    // e.g., CREATE, UPDATE, DELETE
  invoiceId    String    // ID of the affected invoice
  customerId    String    // ID of the affected customer
  changes     Json?     // Stores the changed fields and their new values
  timestamp   DateTime  @default(now())
  userId      String?   // Optional: Track the user making the change
  @@map(name: "audit_logs")
}